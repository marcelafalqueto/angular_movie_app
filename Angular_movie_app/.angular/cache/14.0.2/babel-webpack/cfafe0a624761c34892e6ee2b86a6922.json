{"ast":null,"code":"/*!\n * Glide.js v3.5.2\n * (c) 2013-2021 Jędrzej Chałubek (https://github.com/jedrzejchalubek/)\n * Released under the MIT License.\n */\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A number of slides moved on single swipe.\n   *\n   * Available types:\n   * `` - Moves slider by one slide per swipe\n   * `|` - Moves slider between views per swipe (number of slides defined in `perView` options)\n   *\n   * @type {String}\n   */\n  perSwipe: '',\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Wait for the animation to finish until the next user input can be processed\n   *\n   * @type {boolean}\n   */\n  waitForTransition: true,\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Defines how many clones of current viewport will be generated.\n   *\n   * @type {Number}\n   */\n  cloningRatio: 1,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    type: {\n      slider: 'glide--slider',\n      carousel: 'glide--carousel'\n    },\n    slide: {\n      clone: 'glide__slide--clone',\n      active: 'glide__slide--active'\n    },\n    arrow: {\n      disabled: 'glide__arrow--disabled'\n    },\n    nav: {\n      active: 'glide__bullet--active'\n    }\n  }\n};\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\n\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \".concat(msg));\n}\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\n\nfunction toInt(value) {\n  return parseInt(value);\n}\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\n\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\n\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\n\nfunction isObject(value) {\n  var type = _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\n\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\n\n\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\n\n\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\n\n\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n    return r[k], r;\n  }, {});\n}\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\n\n\nfunction mergeOptions(defaults, settings) {\n  var options = Object.assign({}, defaults, settings); // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = Object.assign({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = Object.assign({}, defaults.classes.direction, settings.classes.direction);\n    }\n\n    if (settings.classes.hasOwnProperty('type')) {\n      options.classes.type = Object.assign({}, defaults.classes.type, settings.classes.type);\n    }\n\n    if (settings.classes.hasOwnProperty('slide')) {\n      options.classes.slide = Object.assign({}, defaults.classes.slide, settings.classes.slide);\n    }\n\n    if (settings.classes.hasOwnProperty('arrow')) {\n      options.classes.arrow = Object.assign({}, defaults.classes.arrow, settings.classes.arrow);\n    }\n\n    if (settings.classes.hasOwnProperty('nav')) {\n      options.classes.nav = Object.assign({}, defaults.classes.nav, settings.classes.nav);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = Object.assign({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = /*#__PURE__*/function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  _createClass(EventsBus, [{\n    key: \"on\",\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n\n        return;\n      } // Create the event's object if not yet created\n\n\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      } // Add the handler to queue\n\n\n      var index = this.events[event].push(handler) - 1; // Provide handle back for removal of event\n\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n\n        return;\n      } // If the event doesn't exist, or there's no handlers in queue, just leave\n\n\n      if (!this.hop.call(this.events, event)) {\n        return;\n      } // Cycle through events queue, fire!\n\n\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n\n  return EventsBus;\n}();\n\nvar Glide$1 = /*#__PURE__*/function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: \"mutate\",\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     * `|>` - Move one viewport forward\r\n     * `|<` - Move one viewport backward\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"go\",\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(distance) {\n      this._c.Transition.disable();\n\n      this._c.Move.make(distance);\n\n      return this;\n    }\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n      return this;\n    }\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.disabled = false;\n      return this;\n    }\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"isType\",\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._o;\n    }\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._i;\n    }\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set(i) {\n      this._i = toInt(i);\n    }\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this.settings.type;\n    }\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._d;\n    }\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set(status) {\n      this._d = !!status;\n    }\n  }]);\n\n  return Glide;\n}();\n\nfunction Run(Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        !Glide.settings.waitForTransition || Glide.disable();\n        this.move = move;\n        Events.emit('run.before', this.move);\n        this.calculate();\n        Events.emit('run', this.move);\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n\n          if (_this.isOffset()) {\n            _this._o = false;\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n          Glide.enable();\n        });\n      }\n    },\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Number|Undefined}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction; // By default assume that size of view is equal to one slide\n\n      var viewSize = 1; // While direction is `=` we want jump to\n      // a specified index described in steps.\n\n      if (direction === '=') {\n        // Check if bound is true, \n        // as we want to avoid whitespaces.\n        if (Glide.settings.bound && toInt(steps) > length) {\n          Glide.index = length;\n          return;\n        }\n\n        Glide.index = steps;\n        return;\n      } // When pattern is equal to `>>` we want\n      // fast forward to the last slide.\n\n\n      if (direction === '>' && steps === '>') {\n        Glide.index = length;\n        return;\n      } // When pattern is equal to `<<` we want\n      // fast forward to the first slide.\n\n\n      if (direction === '<' && steps === '<') {\n        Glide.index = 0;\n        return;\n      } // pagination movement\n\n\n      if (direction === '|') {\n        viewSize = Glide.settings.perView || 1;\n      } // we are moving forward\n\n\n      if (direction === '>' || direction === '|' && steps === '>') {\n        var index = calculateForwardIndex(viewSize);\n\n        if (index > length) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeForwardIndex(index, viewSize);\n        return;\n      } // we are moving backward\n\n\n      if (direction === '<' || direction === '|' && steps === '<') {\n        var _index = calculateBackwardIndex(viewSize);\n\n        if (_index < 0) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeBackwardIndex(_index, viewSize);\n        return;\n      }\n\n      warn(\"Invalid direction pattern [\".concat(direction).concat(steps, \"] has been used\"));\n    },\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index <= 0;\n    },\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index >= this.length;\n    },\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (!direction) {\n        return this._o;\n      }\n\n      if (!this._o) {\n        return false;\n      } // did we view to the right?\n\n\n      if (direction === '|>') {\n        return this.move.direction === '|' && this.move.steps === '>';\n      } // did we view to the left?\n\n\n      if (direction === '|<') {\n        return this.move.direction === '|' && this.move.steps === '<';\n      }\n\n      return this.move.direction === direction;\n    },\n\n    /**\n     * Checks if bound mode is active\n     *\n     * @return {Boolean}\n     */\n    isBound: function isBound() {\n      return Glide.isType('slider') && Glide.settings.focusAt !== 'center' && Glide.settings.bound;\n    }\n  };\n  /**\n   * Returns index value to move forward/to the right\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n  function calculateForwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index + viewSize;\n    }\n\n    return index + (viewSize - index % viewSize);\n  }\n  /**\n   * Normalizes the given forward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function normalizeForwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index <= length) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index - (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on the last possible index value given by bound\n      if (Run.isBound() && !Run.isEnd()) {\n        return length;\n      }\n\n      return 0;\n    }\n\n    if (Run.isBound()) {\n      return length;\n    }\n\n    return Math.floor(length / viewSize) * viewSize;\n  }\n  /**\n   * Calculates index value to move backward/to the left\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function calculateBackwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index - viewSize;\n    } // ensure our back navigation results in the same index as a forward navigation\n    // to experience a homogeneous paging\n\n\n    var view = Math.ceil(index / viewSize);\n    return (view - 1) * viewSize;\n  }\n  /**\n   * Normalizes the given backward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {*}\n   */\n\n\n  function normalizeBackwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index >= 0) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index + (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on first possible index value before we to rewind to the length given by bound\n      if (Run.isBound() && Run.isStart()) {\n        return length;\n      }\n\n      return Math.floor(length / viewSize) * viewSize;\n    }\n\n    return 0;\n  }\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length; // If the `bound` option is active, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (this.isBound()) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n  return Run;\n}\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\n\n\nfunction now() {\n  return new Date().getTime();\n}\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\n\nfunction throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\n\nfunction Gaps(Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimensions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * Components.Sizes.length;\n    }\n  });\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n  return Gaps;\n}\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\n\n\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\n\n\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\n\nfunction Html(Glide, Components, Events) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.collectSlides();\n    },\n\n    /**\n     * Collect slides\n     */\n    collectSlides: function collectSlides() {\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.slide.clone);\n      });\n    }\n  };\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn(\"Could not find track element. Please use \".concat(TRACK_SELECTOR, \" attribute.\"));\n      }\n    }\n  });\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n  /**\n   * Add/remove/reorder dynamic slides\n   */\n\n  Events.on('update', function () {\n    Html.collectSlides();\n  });\n  return Html;\n}\n\nfunction Peek(Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n  return Peek;\n}\n\nfunction Move(Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.offset = offset;\n      Events.emit('move', {\n        movement: this.value\n      });\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n  return Move;\n}\n\nfunction Sizes(Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimensions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = \"\".concat(this.slideWidth, \"px\");\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n    /**\n     * Setups dimensions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper() {\n      Components.Html.wrapper.style.width = \"\".concat(this.wrapperSize, \"px\");\n    },\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the slider (visible area).\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.track.offsetWidth;\n    }\n  });\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of a single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimensions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n  return Sizes;\n}\n\nfunction Build(Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n      this.typeClass();\n      this.activeClass();\n      Events.emit('build.after');\n    },\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.type[Glide.settings.type]);\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.slide.active);\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.slide.active);\n        });\n      }\n    },\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var _Glide$settings$class = Glide.settings.classes,\n          type = _Glide$settings$class.type,\n          slide = _Glide$settings$class.slide;\n      Components.Html.root.classList.remove(type[Glide.settings.type]);\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(slide.active);\n      });\n    }\n  };\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimensions\n   * - on updating settings via API\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n  return Build;\n}\n\nfunction Clones(Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {[]}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes,\n          cloningRatio = _Glide$settings.cloningRatio;\n\n      if (slides.length !== 0) {\n        var peekIncrementer = +!!Glide.settings.peek;\n        var cloneCount = perView + peekIncrementer + Math.round(perView / 2);\n        var append = slides.slice(0, cloneCount).reverse();\n        var prepend = slides.slice(cloneCount * -1);\n\n        for (var r = 0; r < Math.max(cloningRatio, Math.floor(perView / slides.length)); r++) {\n          for (var i = 0; i < append.length; i++) {\n            var clone = append[i].cloneNode(true);\n            clone.classList.add(classes.slide.clone);\n            items.push(clone);\n          }\n\n          for (var _i = 0; _i < prepend.length; _i++) {\n            var _clone = prepend[_i].cloneNode(true);\n\n            _clone.classList.add(classes.slide.clone);\n\n            items.unshift(_clone);\n          }\n        }\n      }\n\n      return items;\n    },\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half * -1).reverse();\n      var width = \"\".concat(Components.Sizes.slideWidth, \"px\");\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimensions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n  return Clones;\n}\n\nvar EventsBinder = /*#__PURE__*/function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  _createClass(EventsBinder, [{\n    key: \"on\",\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n\n  return EventsBinder;\n}();\n\nfunction Resize(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\n\nfunction Direction(Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n\n  Events.on('update', function () {\n    Direction.mount();\n  });\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n  return Direction;\n}\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Rtl(Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Gap(Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var multiplier = Math.floor(translate / Components.Sizes.slideWidth);\n      return translate + Components.Gaps.value * multiplier;\n    }\n  };\n}\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Grow(Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Peeking(Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Focusing(Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction mutator(Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate(Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n      var translate3d = \"translate3d(\".concat(-1 * transform, \"px, 0px, 0px)\");\n      Components.Html.wrapper.style.mozTransform = translate3d; // needed for supported Firefox 10-15\n\n      Components.Html.wrapper.style.webkitTransform = translate3d; // needed for supported Chrome 10-35, Safari 5.1-8, and Opera 15-22\n\n      Components.Html.wrapper.style.transform = translate3d;\n    },\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    },\n\n    /**\n     * @return {number}\n     */\n    getStartIndex: function getStartIndex() {\n      var length = Components.Sizes.length;\n      var index = Glide.index;\n      var perView = Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        return length + (index - perView);\n      } // \"modulo length\" converts an index that equals length to zero\n\n\n      return (index + perView) % length;\n    },\n\n    /**\n     * @return {number}\n     */\n    getTravelDistance: function getTravelDistance() {\n      var travelDistance = Components.Sizes.slideWidth * Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        // reverse travel distance so that we don't have to change subtract operations\n        return travelDistance * -1;\n      }\n\n      return travelDistance;\n    }\n  };\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n\n  Events.on('move', function (context) {\n    if (!Glide.isType('carousel') || !Components.Run.isOffset()) {\n      return Translate.set(context.movement);\n    }\n\n    Components.Transition.after(function () {\n      Events.emit('translate.jump');\n      Translate.set(Components.Sizes.slideWidth * Glide.index);\n    });\n    var startWidth = Components.Sizes.slideWidth * Components.Translate.getStartIndex();\n    return Translate.set(startWidth - Components.Translate.getTravelDistance());\n  });\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n  return Translate;\n}\n\nfunction Transition(Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return \"\".concat(property, \" \").concat(this.duration, \"ms \").concat(settings.animationTimingFunc);\n      }\n\n      return \"\".concat(property, \" 0ms \").concat(settings.animationTimingFunc);\n    },\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n      this.set();\n    },\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n      this.set();\n    }\n  };\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n\n  Events.on('move', function () {\n    Transition.set();\n  });\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimensions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n\n  Events.on('run', function () {\n    Transition.enable();\n  });\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n  return Transition;\n}\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\n\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n\nfunction Swipe(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n        var swipe = this.touches(event);\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n        Events.emit('swipe.start');\n      }\n    },\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n        var swipe = this.touches(event);\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n          Components.Move.make(subExSx * toFloat(touchRatio));\n          Components.Html.root.classList.add(classes.dragging);\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings2 = Glide.settings,\n            perSwipe = _Glide$settings2.perSwipe,\n            touchAngle = _Glide$settings2.touchAngle,\n            classes = _Glide$settings2.classes;\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n        } else if (swipeDistance < -threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(classes.dragging);\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n        Events.emit('swipe.end');\n      }\n    },\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var _Glide$settings3 = Glide.settings,\n          swipeThreshold = _Glide$settings3.swipeThreshold,\n          dragThreshold = _Glide$settings3.dragThreshold;\n\n      if (swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n      Components.Transition.enable();\n      return this;\n    },\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n      Components.Transition.disable();\n      return this;\n    }\n  };\n  /**\n   * Add component class:\n   * - after initial building\n   */\n\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n  return Swipe;\n}\n\nfunction Images(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n  return Images;\n}\n\nfunction Anchors(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var detached = false;\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var prevented = false;\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n      this.bind();\n    },\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\nvar PREVIOUS_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\"<\\\"]\");\nvar NEXT_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\">\\\"]\");\n\nfunction Controls(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n      /**\n       * Collection of arrow control HTML elements.\n       *\n       * @private\n       * @type {Object}\n       */\n\n      this._arrowControls = {\n        previous: Components.Html.root.querySelectorAll(PREVIOUS_CONTROLS_SELECTOR),\n        next: Components.Html.root.querySelectorAll(NEXT_CONTROLS_SELECTOR)\n      };\n      this.addBindings();\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      if (!item) {\n        return;\n      }\n\n      if (item) {\n        item.classList.add(settings.classes.nav.active);\n        siblings(item).forEach(function (sibling) {\n          sibling.classList.remove(settings.classes.nav.active);\n        });\n      }\n    },\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n\n      if (item) {\n        item.classList.remove(Glide.settings.classes.nav.active);\n      }\n    },\n\n    /**\n     * Calculates, removes or adds `Glide.settings.classes.disabledArrow` class on the control arrows\n     */\n    setArrowState: function setArrowState() {\n      if (Glide.settings.rewind) {\n        return;\n      }\n\n      var next = Controls._arrowControls.next;\n      var previous = Controls._arrowControls.previous;\n      this.resetArrowState(next, previous);\n\n      if (Glide.index === 0) {\n        this.disableArrow(previous);\n      }\n\n      if (Glide.index === Components.Run.length) {\n        this.disableArrow(next);\n      }\n    },\n\n    /**\n     * Removes `Glide.settings.classes.disabledArrow` from given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    resetArrowState: function resetArrowState() {\n      var settings = Glide.settings;\n\n      for (var _len = arguments.length, lists = new Array(_len), _key = 0; _key < _len; _key++) {\n        lists[_key] = arguments[_key];\n      }\n\n      lists.forEach(function (list) {\n        list.forEach(function (element) {\n          element.classList.remove(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds `Glide.settings.classes.disabledArrow` to given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    disableArrow: function disableArrow() {\n      var settings = Glide.settings;\n\n      for (var _len2 = arguments.length, lists = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        lists[_key2] = arguments[_key2];\n      }\n\n      lists.forEach(function (list) {\n        list.forEach(function (element) {\n          element.classList.add(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in direction given via the\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {void}\n     */\n    click: function click(event) {\n      if (!supportsPassive$1 && event.type === 'touchstart') {\n        event.preventDefault();\n      }\n\n      var direction = event.currentTarget.getAttribute('data-glide-dir');\n      Components.Run.make(Components.Direction.resolve(direction));\n    }\n  };\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n  /**\n   * Add or remove disabled class of arrow elements\n   */\n\n  Events.on(['mount.after', 'run'], function () {\n    Controls.setArrowState();\n  });\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n  return Controls;\n}\n\nfunction Keyboard(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      var perSwipe = Glide.settings.perSwipe;\n\n      if (event.keyCode === 39) {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n      }\n\n      if (event.keyCode === 37) {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n      }\n    }\n  };\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Keyboard;\n}\n\nfunction Autoplay(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.enable();\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Enables autoplaying\n     *\n     * @returns {Void}\n     */\n    enable: function enable() {\n      this._e = true;\n    },\n\n    /**\n     * Disables autoplaying.\n     *\n     * @returns {Void}\n     */\n    disable: function disable() {\n      this._e = false;\n    },\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (!this._e) {\n        return;\n      }\n\n      this.enable();\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n\n            Events.emit('autoplay');\n          }, this.time);\n        }\n      }\n    },\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.stop();\n        }\n      });\n      Binder.on('mouseout', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.start();\n        }\n      });\n    },\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['run.before', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n  Events.on(['pause', 'destroy'], function () {\n    Autoplay.disable();\n    Autoplay.stop();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['run.after', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['play'], function () {\n    Autoplay.enable();\n    Autoplay.start();\n  });\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Autoplay;\n}\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\n\n\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn(\"Breakpoints option must be an object\");\n  }\n\n  return {};\n}\n\nfunction Breakpoints(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n\n  var settings = Glide.settings;\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n\n  var points = sortBreakpoints(settings.breakpoints);\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n\n  var defaults = Object.assign({}, settings);\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia(\"(max-width: \".concat(point, \"px)\")).matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n\n  Object.assign(settings, Breakpoints.match(points));\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n    defaults = Object.assign({}, settings);\n  });\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide = /*#__PURE__*/function (_Core) {\n  _inherits(Glide, _Core);\n\n  var _super = _createSuper(Glide);\n\n  function Glide() {\n    _classCallCheck(this, Glide);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _get(_getPrototypeOf(Glide.prototype), \"mount\", this).call(this, Object.assign({}, COMPONENTS, extensions));\n    }\n  }]);\n\n  return Glide;\n}(Glide$1);\n\nexport { Glide as default };","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","call","e","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","arguments","apply","_superPropBase","object","property","hasOwnProperty","_get","get","receiver","base","desc","getOwnPropertyDescriptor","defaults","type","startAt","perView","focusAt","gap","autoplay","hoverpause","keyboard","bound","swipeThreshold","dragThreshold","perSwipe","touchRatio","touchAngle","animationDuration","rewind","rewindDuration","animationTimingFunc","waitForTransition","throttle","direction","peek","cloningRatio","breakpoints","classes","swipeable","dragging","ltr","rtl","slider","carousel","slide","clone","active","arrow","disabled","nav","warn","msg","console","error","concat","toInt","parseInt","toFloat","parseFloat","isString","isObject","isFunction","isUndefined","isArray","Array","mount","glide","extensions","events","components","name","_name","define","prop","definition","sortKeys","keys","sort","reduce","r","k","mergeOptions","settings","options","assign","EventsBus","undefined","hop","on","event","handler","index","push","remove","emit","context","forEach","item","Glide$1","Glide","selector","_c","_t","_e","mount$1","mutate","transformers","update","go","pattern","Run","make","move","distance","Transition","disable","Move","destroy","play","interval","pause","enable","isType","_o","set","_i","_d","status","Components","Events","_this","calculate","after","isStart","isEnd","isOffset","steps","viewSize","calculateForwardIndex","normalizeForwardIndex","_index","calculateBackwardIndex","normalizeBackwardIndex","isBound","Math","floor","view","ceil","_m","step","substr","Html","slides","now","Date","getTime","func","wait","timeout","args","previous","later","leading","throttled","at","remaining","clearTimeout","trailing","setTimeout","cancel","MARGIN_TYPE","Gaps","len","style","Direction","marginLeft","marginRight","Sizes","wrapper","children","siblings","node","parentNode","n","firstChild","matched","nextSibling","nodeType","exist","window","HTMLElement","TRACK_SELECTOR","root","track","querySelector","collectSlides","slice","filter","classList","contains","_r","document","t","Peek","_v","before","offset","movement","slideWidth","translate","is","setupSlides","width","setupWrapper","wrapperSize","offsetWidth","grow","Clones","reductor","Build","typeClass","activeClass","add","sibling","removeClasses","_Glide$settings$class","items","collect","_Glide$settings","peekIncrementer","cloneCount","round","append","reverse","prepend","max","cloneNode","_clone","unshift","_Components$Html","half","appendChild","_i2","insertBefore","_i3","removeChild","EventsBinder","listeners","el","closure","capture","addEventListener","off","removeEventListener","Resize","Binder","bind","unbind","VALID_DIRECTIONS","FLIPED_MOVEMENTS","resolve","token","split","join","addClass","removeClass","indexOf","Rtl","modify","Gap","multiplier","Grow","Peeking","Focusing","mutator","TRANSFORMERS","transformer","Translate","transform","translate3d","mozTransform","webkitTransform","getStartIndex","getTravelDistance","travelDistance","startWidth","compose","duration","transition","callback","supportsPassive","opts","supportsPassive$1","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","Swipe","swipeSin","swipeStartX","swipeStartY","passive","bindSwipeStart","start","swipe","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","subExSx","subEySy","powEX","abs","powEY","swipeHypotenuse","sqrt","swipeCathetus","asin","PI","stopPropagation","end","_Glide$settings2","threshold","swipeDistance","swipeDeg","unbindSwipeMove","unbindSwipeEnd","_Glide$settings3","unbindSwipeStart","_this2","_this3","changedTouches","Images","dragstart","preventDefault","Anchors","detached","prevented","_a","querySelectorAll","click","detach","draggable","attach","NAV_SELECTOR","CONTROLS_SELECTOR","PREVIOUS_CONTROLS_SELECTOR","NEXT_CONTROLS_SELECTOR","Controls","_n","_arrowControls","next","addBindings","setActive","removeActive","controls","setArrowState","resetArrowState","disableArrow","_len","lists","_key","list","element","_len2","_key2","removeBindings","elements","currentTarget","getAttribute","Keyboard","press","keyCode","Autoplay","setInterval","stop","time","clearInterval","sortBreakpoints","points","Breakpoints","match","matchMedia","point","matches","COMPONENTS","_Core","_super","default"],"sources":["C:/Users/mbarretf/node_modules/@glidejs/glide/dist/glide.esm.js"],"sourcesContent":["/*!\n * Glide.js v3.5.2\n * (c) 2013-2021 Jędrzej Chałubek (https://github.com/jedrzejchalubek/)\n * Released under the MIT License.\n */\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A number of slides moved on single swipe.\n   *\n   * Available types:\n   * `` - Moves slider by one slide per swipe\n   * `|` - Moves slider between views per swipe (number of slides defined in `perView` options)\n   *\n   * @type {String}\n   */\n  perSwipe: '',\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Wait for the animation to finish until the next user input can be processed\n   *\n   * @type {boolean}\n   */\n  waitForTransition: true,\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Defines how many clones of current viewport will be generated.\n   *\n   * @type {Number}\n   */\n  cloningRatio: 1,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    type: {\n      slider: 'glide--slider',\n      carousel: 'glide--carousel'\n    },\n    slide: {\n      clone: 'glide__slide--clone',\n      active: 'glide__slide--active'\n    },\n    arrow: {\n      disabled: 'glide__arrow--disabled'\n    },\n    nav: {\n      active: 'glide__bullet--active'\n    }\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \".concat(msg));\n}\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction isObject(value) {\n  var type = _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\n\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\n\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n    return r[k], r;\n  }, {});\n}\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\n\nfunction mergeOptions(defaults, settings) {\n  var options = Object.assign({}, defaults, settings); // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = Object.assign({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = Object.assign({}, defaults.classes.direction, settings.classes.direction);\n    }\n\n    if (settings.classes.hasOwnProperty('type')) {\n      options.classes.type = Object.assign({}, defaults.classes.type, settings.classes.type);\n    }\n\n    if (settings.classes.hasOwnProperty('slide')) {\n      options.classes.slide = Object.assign({}, defaults.classes.slide, settings.classes.slide);\n    }\n\n    if (settings.classes.hasOwnProperty('arrow')) {\n      options.classes.arrow = Object.assign({}, defaults.classes.arrow, settings.classes.arrow);\n    }\n\n    if (settings.classes.hasOwnProperty('nav')) {\n      options.classes.nav = Object.assign({}, defaults.classes.nav, settings.classes.nav);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = Object.assign({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = /*#__PURE__*/function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  _createClass(EventsBus, [{\n    key: \"on\",\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n\n        return;\n      } // Create the event's object if not yet created\n\n\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      } // Add the handler to queue\n\n\n      var index = this.events[event].push(handler) - 1; // Provide handle back for removal of event\n\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n\n        return;\n      } // If the event doesn't exist, or there's no handlers in queue, just leave\n\n\n      if (!this.hop.call(this.events, event)) {\n        return;\n      } // Cycle through events queue, fire!\n\n\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n\n  return EventsBus;\n}();\n\nvar Glide$1 = /*#__PURE__*/function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: \"mutate\",\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     * `|>` - Move one viewport forward\r\n     * `|<` - Move one viewport backward\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"go\",\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(distance) {\n      this._c.Transition.disable();\n\n      this._c.Move.make(distance);\n\n      return this;\n    }\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n      return this;\n    }\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.disabled = false;\n      return this;\n    }\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"isType\",\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._o;\n    }\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._i;\n    }\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set(i) {\n      this._i = toInt(i);\n    }\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this.settings.type;\n    }\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._d;\n    }\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set(status) {\n      this._d = !!status;\n    }\n  }]);\n\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        !Glide.settings.waitForTransition || Glide.disable();\n        this.move = move;\n        Events.emit('run.before', this.move);\n        this.calculate();\n        Events.emit('run', this.move);\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n\n          if (_this.isOffset()) {\n            _this._o = false;\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n          Glide.enable();\n        });\n      }\n    },\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Number|Undefined}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction; // By default assume that size of view is equal to one slide\n\n      var viewSize = 1; // While direction is `=` we want jump to\n      // a specified index described in steps.\n\n      if (direction === '=') {\n        // Check if bound is true, \n        // as we want to avoid whitespaces.\n        if (Glide.settings.bound && toInt(steps) > length) {\n          Glide.index = length;\n          return;\n        }\n\n        Glide.index = steps;\n        return;\n      } // When pattern is equal to `>>` we want\n      // fast forward to the last slide.\n\n\n      if (direction === '>' && steps === '>') {\n        Glide.index = length;\n        return;\n      } // When pattern is equal to `<<` we want\n      // fast forward to the first slide.\n\n\n      if (direction === '<' && steps === '<') {\n        Glide.index = 0;\n        return;\n      } // pagination movement\n\n\n      if (direction === '|') {\n        viewSize = Glide.settings.perView || 1;\n      } // we are moving forward\n\n\n      if (direction === '>' || direction === '|' && steps === '>') {\n        var index = calculateForwardIndex(viewSize);\n\n        if (index > length) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeForwardIndex(index, viewSize);\n        return;\n      } // we are moving backward\n\n\n      if (direction === '<' || direction === '|' && steps === '<') {\n        var _index = calculateBackwardIndex(viewSize);\n\n        if (_index < 0) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeBackwardIndex(_index, viewSize);\n        return;\n      }\n\n      warn(\"Invalid direction pattern [\".concat(direction).concat(steps, \"] has been used\"));\n    },\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index <= 0;\n    },\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index >= this.length;\n    },\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (!direction) {\n        return this._o;\n      }\n\n      if (!this._o) {\n        return false;\n      } // did we view to the right?\n\n\n      if (direction === '|>') {\n        return this.move.direction === '|' && this.move.steps === '>';\n      } // did we view to the left?\n\n\n      if (direction === '|<') {\n        return this.move.direction === '|' && this.move.steps === '<';\n      }\n\n      return this.move.direction === direction;\n    },\n\n    /**\n     * Checks if bound mode is active\n     *\n     * @return {Boolean}\n     */\n    isBound: function isBound() {\n      return Glide.isType('slider') && Glide.settings.focusAt !== 'center' && Glide.settings.bound;\n    }\n  };\n  /**\n   * Returns index value to move forward/to the right\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n  function calculateForwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index + viewSize;\n    }\n\n    return index + (viewSize - index % viewSize);\n  }\n  /**\n   * Normalizes the given forward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function normalizeForwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index <= length) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index - (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on the last possible index value given by bound\n      if (Run.isBound() && !Run.isEnd()) {\n        return length;\n      }\n\n      return 0;\n    }\n\n    if (Run.isBound()) {\n      return length;\n    }\n\n    return Math.floor(length / viewSize) * viewSize;\n  }\n  /**\n   * Calculates index value to move backward/to the left\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function calculateBackwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index - viewSize;\n    } // ensure our back navigation results in the same index as a forward navigation\n    // to experience a homogeneous paging\n\n\n    var view = Math.ceil(index / viewSize);\n    return (view - 1) * viewSize;\n  }\n  /**\n   * Normalizes the given backward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {*}\n   */\n\n\n  function normalizeBackwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index >= 0) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index + (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on first possible index value before we to rewind to the length given by bound\n      if (Run.isBound() && Run.isStart()) {\n        return length;\n      }\n\n      return Math.floor(length / viewSize) * viewSize;\n    }\n\n    return 0;\n  }\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length; // If the `bound` option is active, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (this.isBound()) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimensions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * Components.Sizes.length;\n    }\n  });\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\n\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\nfunction Html (Glide, Components, Events) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.collectSlides();\n    },\n\n    /**\n     * Collect slides\n     */\n    collectSlides: function collectSlides() {\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.slide.clone);\n      });\n    }\n  };\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn(\"Could not find track element. Please use \".concat(TRACK_SELECTOR, \" attribute.\"));\n      }\n    }\n  });\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n  /**\n   * Add/remove/reorder dynamic slides\n   */\n\n  Events.on('update', function () {\n    Html.collectSlides();\n  });\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.offset = offset;\n      Events.emit('move', {\n        movement: this.value\n      });\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimensions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = \"\".concat(this.slideWidth, \"px\");\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n    /**\n     * Setups dimensions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper() {\n      Components.Html.wrapper.style.width = \"\".concat(this.wrapperSize, \"px\");\n    },\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the slider (visible area).\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.track.offsetWidth;\n    }\n  });\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of a single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimensions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n      this.typeClass();\n      this.activeClass();\n      Events.emit('build.after');\n    },\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.type[Glide.settings.type]);\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.slide.active);\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.slide.active);\n        });\n      }\n    },\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var _Glide$settings$class = Glide.settings.classes,\n          type = _Glide$settings$class.type,\n          slide = _Glide$settings$class.slide;\n      Components.Html.root.classList.remove(type[Glide.settings.type]);\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(slide.active);\n      });\n    }\n  };\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimensions\n   * - on updating settings via API\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {[]}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes,\n          cloningRatio = _Glide$settings.cloningRatio;\n\n      if (slides.length !== 0) {\n        var peekIncrementer = +!!Glide.settings.peek;\n        var cloneCount = perView + peekIncrementer + Math.round(perView / 2);\n        var append = slides.slice(0, cloneCount).reverse();\n        var prepend = slides.slice(cloneCount * -1);\n\n        for (var r = 0; r < Math.max(cloningRatio, Math.floor(perView / slides.length)); r++) {\n          for (var i = 0; i < append.length; i++) {\n            var clone = append[i].cloneNode(true);\n            clone.classList.add(classes.slide.clone);\n            items.push(clone);\n          }\n\n          for (var _i = 0; _i < prepend.length; _i++) {\n            var _clone = prepend[_i].cloneNode(true);\n\n            _clone.classList.add(classes.slide.clone);\n\n            items.unshift(_clone);\n          }\n        }\n      }\n\n      return items;\n    },\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half * -1).reverse();\n      var width = \"\".concat(Components.Sizes.slideWidth, \"px\");\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimensions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n  return Clones;\n}\n\nvar EventsBinder = /*#__PURE__*/function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  _createClass(EventsBinder, [{\n    key: \"on\",\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n\n  Events.on('update', function () {\n    Direction.mount();\n  });\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var multiplier = Math.floor(translate / Components.Sizes.slideWidth);\n      return translate + Components.Gaps.value * multiplier;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n      var translate3d = \"translate3d(\".concat(-1 * transform, \"px, 0px, 0px)\");\n      Components.Html.wrapper.style.mozTransform = translate3d; // needed for supported Firefox 10-15\n\n      Components.Html.wrapper.style.webkitTransform = translate3d; // needed for supported Chrome 10-35, Safari 5.1-8, and Opera 15-22\n\n      Components.Html.wrapper.style.transform = translate3d;\n    },\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    },\n\n    /**\n     * @return {number}\n     */\n    getStartIndex: function getStartIndex() {\n      var length = Components.Sizes.length;\n      var index = Glide.index;\n      var perView = Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        return length + (index - perView);\n      } // \"modulo length\" converts an index that equals length to zero\n\n\n      return (index + perView) % length;\n    },\n\n    /**\n     * @return {number}\n     */\n    getTravelDistance: function getTravelDistance() {\n      var travelDistance = Components.Sizes.slideWidth * Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        // reverse travel distance so that we don't have to change subtract operations\n        return travelDistance * -1;\n      }\n\n      return travelDistance;\n    }\n  };\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n\n  Events.on('move', function (context) {\n    if (!Glide.isType('carousel') || !Components.Run.isOffset()) {\n      return Translate.set(context.movement);\n    }\n\n    Components.Transition.after(function () {\n      Events.emit('translate.jump');\n      Translate.set(Components.Sizes.slideWidth * Glide.index);\n    });\n    var startWidth = Components.Sizes.slideWidth * Components.Translate.getStartIndex();\n    return Translate.set(startWidth - Components.Translate.getTravelDistance());\n  });\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return \"\".concat(property, \" \").concat(this.duration, \"ms \").concat(settings.animationTimingFunc);\n      }\n\n      return \"\".concat(property, \" 0ms \").concat(settings.animationTimingFunc);\n    },\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n      this.set();\n    },\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n      this.set();\n    }\n  };\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n\n  Events.on('move', function () {\n    Transition.set();\n  });\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimensions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n\n  Events.on('run', function () {\n    Transition.enable();\n  });\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\nfunction Swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n        var swipe = this.touches(event);\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n        Events.emit('swipe.start');\n      }\n    },\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n        var swipe = this.touches(event);\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n          Components.Move.make(subExSx * toFloat(touchRatio));\n          Components.Html.root.classList.add(classes.dragging);\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings2 = Glide.settings,\n            perSwipe = _Glide$settings2.perSwipe,\n            touchAngle = _Glide$settings2.touchAngle,\n            classes = _Glide$settings2.classes;\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n        } else if (swipeDistance < -threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(classes.dragging);\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n        Events.emit('swipe.end');\n      }\n    },\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var _Glide$settings3 = Glide.settings,\n          swipeThreshold = _Glide$settings3.swipeThreshold,\n          dragThreshold = _Glide$settings3.dragThreshold;\n\n      if (swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n      Components.Transition.enable();\n      return this;\n    },\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n      Components.Transition.disable();\n      return this;\n    }\n  };\n  /**\n   * Add component class:\n   * - after initial building\n   */\n\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n  return Swipe;\n}\n\nfunction Images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n  return Images;\n}\n\nfunction Anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var detached = false;\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var prevented = false;\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n      this.bind();\n    },\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\nvar PREVIOUS_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\"<\\\"]\");\nvar NEXT_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\">\\\"]\");\nfunction Controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n      /**\n       * Collection of arrow control HTML elements.\n       *\n       * @private\n       * @type {Object}\n       */\n\n      this._arrowControls = {\n        previous: Components.Html.root.querySelectorAll(PREVIOUS_CONTROLS_SELECTOR),\n        next: Components.Html.root.querySelectorAll(NEXT_CONTROLS_SELECTOR)\n      };\n      this.addBindings();\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      if (!item) {\n        return;\n      }\n\n      if (item) {\n        item.classList.add(settings.classes.nav.active);\n        siblings(item).forEach(function (sibling) {\n          sibling.classList.remove(settings.classes.nav.active);\n        });\n      }\n    },\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n\n      if (item) {\n        item.classList.remove(Glide.settings.classes.nav.active);\n      }\n    },\n\n    /**\n     * Calculates, removes or adds `Glide.settings.classes.disabledArrow` class on the control arrows\n     */\n    setArrowState: function setArrowState() {\n      if (Glide.settings.rewind) {\n        return;\n      }\n\n      var next = Controls._arrowControls.next;\n      var previous = Controls._arrowControls.previous;\n      this.resetArrowState(next, previous);\n\n      if (Glide.index === 0) {\n        this.disableArrow(previous);\n      }\n\n      if (Glide.index === Components.Run.length) {\n        this.disableArrow(next);\n      }\n    },\n\n    /**\n     * Removes `Glide.settings.classes.disabledArrow` from given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    resetArrowState: function resetArrowState() {\n      var settings = Glide.settings;\n\n      for (var _len = arguments.length, lists = new Array(_len), _key = 0; _key < _len; _key++) {\n        lists[_key] = arguments[_key];\n      }\n\n      lists.forEach(function (list) {\n        list.forEach(function (element) {\n          element.classList.remove(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds `Glide.settings.classes.disabledArrow` to given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    disableArrow: function disableArrow() {\n      var settings = Glide.settings;\n\n      for (var _len2 = arguments.length, lists = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        lists[_key2] = arguments[_key2];\n      }\n\n      lists.forEach(function (list) {\n        list.forEach(function (element) {\n          element.classList.add(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in direction given via the\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {void}\n     */\n    click: function click(event) {\n      if (!supportsPassive$1 && event.type === 'touchstart') {\n        event.preventDefault();\n      }\n\n      var direction = event.currentTarget.getAttribute('data-glide-dir');\n      Components.Run.make(Components.Direction.resolve(direction));\n    }\n  };\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n  /**\n   * Add or remove disabled class of arrow elements\n   */\n\n  Events.on(['mount.after', 'run'], function () {\n    Controls.setArrowState();\n  });\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n  return Controls;\n}\n\nfunction Keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      var perSwipe = Glide.settings.perSwipe;\n\n      if (event.keyCode === 39) {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n      }\n\n      if (event.keyCode === 37) {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n      }\n    }\n  };\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Keyboard;\n}\n\nfunction Autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.enable();\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Enables autoplaying\n     *\n     * @returns {Void}\n     */\n    enable: function enable() {\n      this._e = true;\n    },\n\n    /**\n     * Disables autoplaying.\n     *\n     * @returns {Void}\n     */\n    disable: function disable() {\n      this._e = false;\n    },\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (!this._e) {\n        return;\n      }\n\n      this.enable();\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n\n            Events.emit('autoplay');\n          }, this.time);\n        }\n      }\n    },\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.stop();\n        }\n      });\n      Binder.on('mouseout', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.start();\n        }\n      });\n    },\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['run.before', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n  Events.on(['pause', 'destroy'], function () {\n    Autoplay.disable();\n    Autoplay.stop();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['run.after', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['play'], function () {\n    Autoplay.enable();\n    Autoplay.start();\n  });\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\n\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn(\"Breakpoints option must be an object\");\n  }\n\n  return {};\n}\n\nfunction Breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n\n  var settings = Glide.settings;\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n\n  var points = sortBreakpoints(settings.breakpoints);\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n\n  var defaults = Object.assign({}, settings);\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia(\"(max-width: \".concat(point, \"px)\")).matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n\n  Object.assign(settings, Breakpoints.match(points));\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n    defaults = Object.assign({}, settings);\n  });\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide = /*#__PURE__*/function (_Core) {\n  _inherits(Glide, _Core);\n\n  var _super = _createSuper(Glide);\n\n  function Glide() {\n    _classCallCheck(this, Glide);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _get(_getPrototypeOf(Glide.prototype), \"mount\", this).call(this, Object.assign({}, COMPONENTS, extensions));\n    }\n  }]);\n\n  return Glide;\n}(Glide$1);\n\nexport { Glide as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}